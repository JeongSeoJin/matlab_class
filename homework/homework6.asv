% Homework6 정서진(2024112396)

%% problem 1
clear; clc; close all;
fprintf("[Prob 1]")
% (a)
[x_a, y_a, w_a] = maxormin(3, -7, 14);
fprintf("Problem 1 (a): x = %.2f, y = %.2f, type = %d\n", x_a, y_a, w_a);

% (b)
[x_b, y_b, w_b] = maxormin(-5, -11, 15);
fprintf("Problem 1 (b): x = %.2f, y = %.2f, type = %d\n", x_b, y_b, w_b);

pause;

%% problem 2
clear; clc; close all;
fprintf("[Prob 2]")

% (a) 점 P와 포물선 간 거리 d 계산식

x_parabola = @(y2 * (y - 2)^2 + 3;
d = sqrt((x_parabola - 3)^2 + (y - 4)^2);
d_poly = simplify(d);

% (b) 0 <= y <= 4 범위에서 d를 그래프
y_vals = 0:0.1:4;
d_vals = double(subs(d, y, y_vals));
figure;
plot(y_vals, d_vals);
xlabel('y'); ylabel('d');
title('Distance d from P(3,4) to points on the parabola');

% (c) d = 3이 되는 y 값 찾기
y_sol = solve(d == 3, y);
x_sol = double(subs(x_parabola, y, y_sol));
fprintf("Problem 2 (c): Q coordinates for d=3 are (%.2f, %.2f) and (%.2f, %.2f)\n", double(x_sol(1)), double(y_sol(1)), double(x_sol(2)), double(y_sol(2)));

% (d) d의 최소값 및 해당 Q 좌표 찾기
[min_d, idx] = min(d_vals);
min_y = y_vals(idx);
min_x = double(subs(x_parabola, y, min_y));
fprintf("Problem 2 (d): Minimum d is %.2f at Q(%.2f, %.2f)\n", min_d, min_x, min_y);

pause;

%% problem 3
clear; clc; close all;
fprintf("[Prob 3]")

% 데이터
x_data = [5 10 15 20 25 30 35 40 45 50];
y_data = [15 25 32 33 37 35 38 39 41 42];

% 곡선 피팅
fitting_func = @(b, x) (b(1) * x) ./ (b(2) + x);
initial_guess = [40, 10];
b_estimated = lsqcurvefit(fitting_func, initial_guess, x_data, y_data);

% 피팅된 함수 플롯
x_fit = linspace(5, 50, 100);
y_fit = fitting_func(b_estimated, x_fit);
figure;
plot(x_data, y_data, 'o'); % 데이터 점
hold on;
plot(x_fit, y_fit, '-'); % 피팅된 곡선
xlabel('x'); ylabel('y');
title('Curve fitting for y = ax / (b + x)');
legend('Data points', 'Fitted curve');

% x = 23일 때 y 값 예측
y_pred = fitting_func(b_estimated, 23);
fprintf("Problem 3: Predicted y at x = 23 is %.2f\n", y_pred);

pause;